// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should accept different glob patterns 1`] = `
Array [
  "import * as React from 'react';

export interface AlertProps {
    alert?: boolean;
}

export class Alert extends React.Component<AlertProps, any> {
    render(): JSX.Element;

}

",
  "import * as React from 'react';

export interface PanelProps {
    open?: boolean;
}

export const Panel: React.SFC<PanelProps>;

",
]
`;

exports[`should generate type definitions 1`] = `
Array [
  "import * as React from 'react';

export type CompleteOptionalEnum = \\"News\\" | \\"Photos\\";

export type CompleteOptionalUnion = string | number | Message;

export interface CompleteOptionalObjectWithShape {
    color?: string;
    fontSize?: number;
}

export interface CompleteProps {
    optionalArray?: any[];
    optionalBool?: boolean;
    optionalFunc?: (...args: any[])=>any;
    optionalNumber?: number;
    optionalObject?: Object;
    optionalString?: string;
    optionalSymbol?: Symbol;
    optionalNode?: React.ReactNode;
    optionalElement?: React.ReactElement<any>;
    optionalMessage?: Message;
    optionalEnum?: CompleteOptionalEnum;
    optionalUnion?: CompleteOptionalUnion;
    optionalArrayOf?: number[];
    optionalObjectOf?: any;
    optionalObjectWithShape?: CompleteOptionalObjectWithShape;
    requiredFunc: (...args: any[])=>any;
    requiredAny: any;
}

export class Complete extends React.Component<CompleteProps, any> {
    render(): JSX.Element;

}

",
  "import * as React from 'react';

export interface PanelProps {
    open?: boolean;
}

export const Panel: React.SFC<PanelProps>;

",
]
`;

exports[`should generate type definitions with module name 1`] = `
Array [
  "declare module '@pkgz/ui' {
    import * as React from 'react';

    export type CompleteOptionalEnum = \\"News\\" | \\"Photos\\";

    export type CompleteOptionalUnion = string | number | Message;

    export interface CompleteOptionalObjectWithShape {
        color?: string;
        fontSize?: number;
    }

    export interface CompleteProps {
        optionalArray?: any[];
        optionalBool?: boolean;
        optionalFunc?: (...args: any[])=>any;
        optionalNumber?: number;
        optionalObject?: Object;
        optionalString?: string;
        optionalSymbol?: Symbol;
        optionalNode?: React.ReactNode;
        optionalElement?: React.ReactElement<any>;
        optionalMessage?: Message;
        optionalEnum?: CompleteOptionalEnum;
        optionalUnion?: CompleteOptionalUnion;
        optionalArrayOf?: number[];
        optionalObjectOf?: any;
        optionalObjectWithShape?: CompleteOptionalObjectWithShape;
        requiredFunc: (...args: any[])=>any;
        requiredAny: any;
    }

    export class Complete extends React.Component<CompleteProps, any> {
        render(): JSX.Element;

    }

}

",
  "declare module '@pkgz/ui' {
    import * as React from 'react';

    export interface PanelProps {
        open?: boolean;
    }

    export const Panel: React.SFC<PanelProps>;

}

",
]
`;
